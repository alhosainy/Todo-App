// Mocks generated by Mockito 5.4.2 from annotations
// in to_do_app/test/src/data/repository/todos_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:to_do_app/src/data/repository/todos_repository_impl.dart'
    as _i5;
import 'package:to_do_app/src/data/source/storage/files.dart' as _i2;
import 'package:to_do_app/src/domain/models/todo.dart' as _i6;
import 'package:to_do_app/src/domain/models/todos.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFiles_0 extends _i1.SmartFake implements _i2.Files {
  _FakeFiles_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodos_1 extends _i1.SmartFake implements _i3.Todos {
  _FakeTodos_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Files].
///
/// See the documentation for Mockito's code generation for more information.
class MockFiles extends _i1.Mock implements _i2.Files {
  @override
  _i4.Future<void> delete(String? path) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<String?> read(String? path) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [path],
        ),
        returnValue: _i4.Future<String?>.value(),
        returnValueForMissingStub: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<void> write(
    String? path,
    String? content,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [
            path,
            content,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [TodosRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodosRepositoryImpl extends _i1.Mock
    implements _i5.TodosRepositoryImpl {
  @override
  _i2.Files get files => (super.noSuchMethod(
        Invocation.getter(#files),
        returnValue: _FakeFiles_0(
          this,
          Invocation.getter(#files),
        ),
        returnValueForMissingStub: _FakeFiles_0(
          this,
          Invocation.getter(#files),
        ),
      ) as _i2.Files);
  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i4.Future<_i3.Todos> loadTodos() => (super.noSuchMethod(
        Invocation.method(
          #loadTodos,
          [],
        ),
        returnValue: _i4.Future<_i3.Todos>.value(_FakeTodos_1(
          this,
          Invocation.method(
            #loadTodos,
            [],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i3.Todos>.value(_FakeTodos_1(
          this,
          Invocation.method(
            #loadTodos,
            [],
          ),
        )),
      ) as _i4.Future<_i3.Todos>);
  @override
  _i4.Future<void> deleteAllTodos() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllTodos,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteTodo(_i6.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [todo],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteTodoById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodoById,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> saveTodo(_i6.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #saveTodo,
          [todo],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i6.Todo?> getTodoById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getTodoById,
          [id],
        ),
        returnValue: _i4.Future<_i6.Todo?>.value(),
        returnValueForMissingStub: _i4.Future<_i6.Todo?>.value(),
      ) as _i4.Future<_i6.Todo?>);
}
